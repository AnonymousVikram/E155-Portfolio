---
title: "Lab 2"
format:
  html:
    code-links:
      - text: Github Repo
        icon: github
        href: https://github.com/AnonymousVikram/e155-lab2
---

## Overview

Per the guidelines provided, the main goals of this lab were to:

-   Learn about and implement time multiplexing to drive two seven-segment displays

-   Use transistors to provide greater current to drive the displays using FPGA GPIO Pins




## Design

For the SystemVerilog module, I realized there were two main devices I was controlling with the switches: three LEDs, and one 7-segment display. As a result, I split the code into three modules, one for each device and one top module. To program the 7-segment display, I used an `always_comb` block, resulting in the display changing output as soon as any of the switches are changed. On the other hand, the LEDs required some additional manipulation. I noticed that `led[0]` and `led[1]` could be simplified to combinational logic using a `XOR` and `AND` gate respectively, so I designed that using an `assign` statement. However, for `led[3]`, since it was required to blink at 2.4Hz, given an oscillator-generated clock of 48MHz, I required an `always_ff` block used in conjunction with a counter and an internal logic variable to keep track of whether the light should be on or off. This explanation can be visualized using the diagram below:

![](images/blockdiagram.png)

As for the circuit, particular care had to be taken in the connection of the 7-segment display. To begin with, I realized that each segment needed to have its own resistor, rather than having a shared resistor when connecting the anode. This is due to Kirchoff's Junction Law, which tells us that the current going into a junction will be equal to the current leaving the junction. Since there would be a standard amount of current from the anode, if there was a common resistor, it would result in differences in the brightness of segments, if only one segment was illuminated, as opposed to all seven being lit up. This consideration resulted in the following circuit diagram:

![](images/7segcircuit.png)

Then, to determine the value of each resistor, we can do some math, while taking into account that by Kirchoff's Junction law, each branch receives the 3.3V, and that from the datasheet, the forward voltage across a segment is 2.1V. From the datasheet, we can also determine that the ideal current should be 20mA.

$$
V = IR
$$

$$
R = \frac{3.3-2.1}{0.02}=60\Omega
$$

Thus, with this calculation, we know that each of the resistors in the circuit should be $60 \Omega$ .

## Testing

The testing for this lab was quite straightforward, given the only inputs were four switches, resulting in 16 possible combinations. In order to test, I wrote a [testbench](https://github.com/AnonymousVikram/e155-lab1/blob/main/fpga/sim/testbench.sv) with all possible inputs simulated, and verified against the output. The test results are below:

### Waveform

![](images/sim.png){width="2528"}

### Result

![](images/result.png){width="2664"}

## Conclusion

My design was successful in meeting all the requirements for this lab. I also believe I succeeded in meeting the goals of the overall lab. I spent 7 hours working on this lab.